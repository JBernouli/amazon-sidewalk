/***************************************************************************//**
 * @file
 * @brief sli_sidewalk_device_backup_certificate_common.h
 *******************************************************************************
 * # License
 * <b>Copyright 2023 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 * Your use of this software is governed by the terms of
 * Silicon Labs Master Software License Agreement (MSLA)available at
 * www.silabs.com/about-us/legal/master-software-license-agreement.
 * This software contains Third Party Software licensed by Silicon Labs from
 * Amazon.com Services LLC and its affiliates and is governed by the sections
 * of the MSLA applicable to Third Party Software and the additional terms set
 * forth in amazon_sidewalk_license.txt.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/

#ifndef SLI_SIDEWALK_DEVICE_BACKUP_CERTIFICATE_COMMON_H
#define SLI_SIDEWALK_DEVICE_BACKUP_CERTIFICATE_COMMON_H

// -----------------------------------------------------------------------------
//                                   Includes
// -----------------------------------------------------------------------------

#include <stdint.h>

// -----------------------------------------------------------------------------
//                              Macros and Typedefs
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
//                                Global Variables
// -----------------------------------------------------------------------------

// Following part is autogenerated, do not modify or change it!

const uint8_t APP_PUB_ED25519_VAL[] = {
  0xf6, 0xfc, 0xea, 0x52, 0xc8, 0x18, 0xc2, 0xaf,
  0x42, 0x74, 0xef, 0x8b, 0xe9, 0xec, 0x40, 0x5b,
  0x7f, 0xae, 0x7f, 0xe6, 0xe5, 0x0f, 0x39, 0xdf,
  0x7d, 0x2d, 0xbb, 0x33, 0xeb, 0xed, 0x24, 0x3e
};

const uint8_t DEVICE_PRIV_ED25519[] = {
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t DEVICE_PRIV_P256R1[] = {
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t PRODUCT_PUB_ED25519_VAL[] = {
  0x62, 0x71, 0x54, 0x57, 0x75, 0x65, 0x68, 0xca,
  0x85, 0xaf, 0x42, 0x93, 0xd9, 0xe3, 0xd5, 0x4b,
  0x94, 0x24, 0xf4, 0x01, 0x9c, 0xac, 0x8b, 0x80,
  0x76, 0x11, 0xce, 0x79, 0x71, 0x41, 0x6d, 0x01
};

const uint8_t PRODUCT_PUB_ED25519_SIGNATURE_VAL[] = {
  0x3a, 0x95, 0x6e, 0x5e, 0x7a, 0xa4, 0xc3, 0x33,
  0x64, 0xe8, 0xaf, 0x68, 0x3f, 0x81, 0xfc, 0xd8,
  0x38, 0x70, 0x18, 0xf7, 0xf0, 0xe2, 0xd2, 0x6c,
  0x87, 0x55, 0x3c, 0x6f, 0x0b, 0x39, 0x49, 0x5a,
  0xd3, 0x8a, 0x3c, 0x78, 0x35, 0x08, 0x35, 0xd4,
  0x19, 0xb2, 0x11, 0x87, 0x37, 0x3d, 0xa6, 0x94,
  0xbe, 0xd8, 0x8b, 0x6f, 0x4c, 0x55, 0xed, 0xd8,
  0xb7, 0x8f, 0x30, 0xd4, 0x34, 0x3e, 0x20, 0x0f
};

const uint8_t PRODUCT_ED25519_SERIAL_VAL[] = {
  0xc5, 0xc3, 0x00, 0x78
};

const uint8_t PRODUCT_PUB_P256R1_VAL[] = {
  0x59, 0x7b, 0xec, 0x54, 0x1a, 0x20, 0xd7, 0x23,
  0x11, 0xf1, 0x46, 0xde, 0xc6, 0x7f, 0x7a, 0x2f,
  0x6a, 0x1c, 0x32, 0xd3, 0xbc, 0xd4, 0x0f, 0x88,
  0x21, 0xfc, 0xad, 0x51, 0xc3, 0x3a, 0x0a, 0xf0,
  0xad, 0x49, 0xff, 0xb7, 0x59, 0x9a, 0x93, 0x0b,
  0x65, 0x57, 0x76, 0xbf, 0x35, 0xc1, 0x03, 0xed,
  0x85, 0xf1, 0xb0, 0x4a, 0x7d, 0x80, 0x74, 0x23,
  0xd1, 0x85, 0x10, 0x76, 0xd2, 0x4d, 0xa6, 0xba
};

const uint8_t PRODUCT_PUB_P256R1_SIGNATURE_VAL[] = {
  0x14, 0xc5, 0xe8, 0x60, 0x68, 0x36, 0xdc, 0x1e,
  0x7f, 0xfc, 0x8b, 0x9b, 0x5b, 0x0e, 0x3f, 0x15,
  0x0c, 0xa1, 0x75, 0x7e, 0xfb, 0x32, 0x7e, 0xd4,
  0xbe, 0xbe, 0xe4, 0x58, 0xac, 0xc7, 0x8e, 0x88,
  0xe5, 0x85, 0xa6, 0x0d, 0xc2, 0x33, 0x2d, 0x7a,
  0xf5, 0x78, 0xce, 0xf9, 0x65, 0x6b, 0x93, 0xe8,
  0xe8, 0x3c, 0xf1, 0x07, 0x87, 0xee, 0xf7, 0xbc,
  0xfb, 0x72, 0x39, 0x1e, 0x77, 0xce, 0x29, 0xf4
};

const uint8_t PRODUCT_P256R1_SERIAL_VAL[] = {
  0xc4, 0xc3, 0x00, 0x78
};

const uint8_t MAN_PUB_ED25519_VAL[] = {
  0x1b, 0x74, 0x98, 0x5c, 0x0d, 0x98, 0x20, 0xa1,
  0x12, 0x8e, 0x6f, 0xc4, 0x82, 0x07, 0xc7, 0x04,
  0xdc, 0x80, 0x3e, 0x94, 0x3d, 0x64, 0x17, 0x47,
  0x99, 0x05, 0xd6, 0x79, 0x48, 0xa9, 0x4c, 0x5e
};

const uint8_t MAN_PUB_ED25519_SIGNATURE_VAL[] = {
  0xfc, 0x34, 0x42, 0x72, 0xe1, 0xdb, 0x1b, 0x53,
  0x32, 0xb7, 0x8d, 0x14, 0x0e, 0x73, 0x6a, 0x37,
  0x52, 0x6d, 0x33, 0x68, 0xf1, 0xa1, 0xd7, 0xe6,
  0xf2, 0x1c, 0xa8, 0x5f, 0xd8, 0x98, 0x26, 0x28,
  0x81, 0x5f, 0x32, 0x75, 0xc9, 0xd3, 0x08, 0xc4,
  0x9b, 0xe9, 0x55, 0xa7, 0x95, 0x9a, 0xd5, 0x24,
  0x9e, 0x47, 0x29, 0xe5, 0xcc, 0xde, 0x8d, 0xd3,
  0xe1, 0x3b, 0x31, 0xb8, 0xfe, 0x78, 0xba, 0x0e
};

const uint8_t MAN_ED25519_SERIAL_VAL[] = {
  0x02, 0x8c, 0x00, 0x7c
};

const uint8_t MAN_PUB_P256R1_VAL[] = {
  0x69, 0xf4, 0x21, 0x6e, 0x7a, 0x76, 0x4e, 0xd3,
  0x6a, 0x39, 0x28, 0x51, 0xb6, 0x4a, 0xd7, 0xcb,
  0x93, 0x2c, 0x65, 0xe6, 0x16, 0x68, 0x4f, 0x39,
  0x64, 0x4b, 0xc8, 0x3c, 0x6f, 0x1c, 0x25, 0xac,
  0x39, 0xed, 0xb7, 0x41, 0xa1, 0xe2, 0xf0, 0x71,
  0x66, 0xd4, 0x10, 0x1f, 0x00, 0x22, 0x90, 0x33,
  0x86, 0x4e, 0xab, 0x28, 0x41, 0x2a, 0x33, 0x8c,
  0x8f, 0xbb, 0xd3, 0x6f, 0x67, 0xb4, 0x6a, 0x1a
};

const uint8_t MAN_PUB_P256R1_SIGNATURE_VAL[] = {
  0x8e, 0x90, 0xf5, 0xab, 0x99, 0x1b, 0x72, 0x84,
  0x2c, 0xd0, 0xd4, 0xdd, 0xce, 0x9a, 0x84, 0xe1,
  0x59, 0xac, 0xea, 0x9c, 0x51, 0x4e, 0x02, 0xcc,
  0x0d, 0xd3, 0x83, 0x6e, 0x68, 0xae, 0x28, 0x2f,
  0xf6, 0xdf, 0xc0, 0x7e, 0x3e, 0xd5, 0x9b, 0x01,
  0xab, 0xcb, 0xdb, 0x76, 0x2c, 0x1e, 0x6f, 0x4c,
  0xca, 0x3a, 0x71, 0xcb, 0x5b, 0xec, 0x94, 0x6b,
  0xdf, 0xa9, 0x24, 0x63, 0x8f, 0x79, 0x61, 0x8c
};

const uint8_t MAN_P256R1_SERIAL_VAL[] = {
  0x02, 0x8b, 0x00, 0x7c
};

const uint8_t SW_PUB_ED25519_VAL[] = {
  0x1b, 0x3f, 0xa0, 0x14, 0x17, 0x97, 0xfd, 0x93,
  0x4d, 0xf1, 0x52, 0x70, 0x9e, 0xc3, 0x5f, 0x83,
  0x38, 0xf8, 0x99, 0xed, 0x47, 0x81, 0x52, 0x5d,
  0x52, 0x8e, 0x16, 0xf6, 0x4b, 0xf1, 0xf5, 0xca
};

const uint8_t SW_PUB_ED25519_SIGNATURE_VAL[] = {
  0xf6, 0x8c, 0x75, 0xa4, 0x0b, 0x73, 0xa3, 0xfd,
  0xb7, 0x41, 0x4e, 0x1d, 0x7e, 0xc8, 0x18, 0xce,
  0x0b, 0x9d, 0xf2, 0x1e, 0x54, 0x0a, 0xfe, 0x5d,
  0x46, 0x1e, 0xb1, 0x16, 0x89, 0x63, 0xcf, 0x9c,
  0x4e, 0x37, 0xe0, 0xb4, 0x71, 0x9d, 0x69, 0x30,
  0xaf, 0xc1, 0x07, 0x0f, 0x8a, 0x22, 0x78, 0x9c,
  0x42, 0xf1, 0xf9, 0x08, 0xc6, 0x44, 0x1f, 0x8f,
  0xe8, 0x07, 0x85, 0x4e, 0xfd, 0x67, 0xea, 0x00
};

const uint8_t SW_ED25519_SERIAL_VAL[] = {
  0x75, 0x00, 0x00, 0x03
};

const uint8_t SW_PUB_P256R1_VAL[] = {
  0xcf, 0xb0, 0xfd, 0xf8, 0x05, 0x2e, 0x84, 0xcc,
  0x93, 0xb9, 0x02, 0xc4, 0xb9, 0xa4, 0x2e, 0xd0,
  0x4e, 0x98, 0xc1, 0xb4, 0x06, 0xcb, 0x37, 0xd4,
  0x9d, 0x5c, 0xe4, 0xfd, 0xc3, 0x81, 0xf5, 0xc7,
  0xc3, 0x64, 0xa7, 0x4b, 0xa3, 0x2f, 0x15, 0x91,
  0x37, 0x7e, 0xc8, 0x13, 0x2d, 0x15, 0xf4, 0x3a,
  0xcf, 0x2b, 0x6c, 0x35, 0x83, 0xbe, 0x2e, 0xa9,
  0x63, 0xdf, 0x50, 0xf9, 0xd2, 0x06, 0x3b, 0x6f
};

const uint8_t SW_PUB_P256R1_SIGNATURE_VAL[] = {
  0x33, 0x9e, 0x49, 0x9d, 0x0a, 0x66, 0x9b, 0x6d,
  0xd6, 0x40, 0xdb, 0xc7, 0x6b, 0x55, 0x6b, 0xeb,
  0x39, 0x96, 0x0e, 0x3c, 0xe3, 0x1e, 0x97, 0x0d,
  0x8a, 0xb3, 0xdb, 0xcd, 0x7c, 0x81, 0x94, 0xa1,
  0x21, 0x91, 0x7e, 0x31, 0xca, 0x56, 0x92, 0x32,
  0x79, 0xb8, 0x52, 0xb5, 0x57, 0xb4, 0x03, 0x1a,
  0x00, 0x9f, 0xdc, 0xb0, 0x2e, 0x07, 0x3d, 0x32,
  0xab, 0xdd, 0xd6, 0xb3, 0x76, 0xf1, 0x24, 0x87
};

const uint8_t SW_P256R1_SERIAL_VAL[] = {
  0x75, 0x00, 0x00, 0x02
};

const uint8_t AMZN_PUB_ED25519_VAL[] = {
  0x3b, 0x27, 0x7f, 0xd4, 0x83, 0x21, 0x93, 0xe8,
  0x0d, 0x71, 0x74, 0x4d, 0xd0, 0xbd, 0x3c, 0xea,
  0x93, 0x82, 0x57, 0x74, 0xa1, 0x70, 0xe5, 0xd9,
  0x73, 0xda, 0x54, 0x3e, 0x02, 0xbe, 0xf2, 0xde
};

const uint8_t AMZN_PUB_P256R1_VAL[] = {
  0x05, 0x07, 0x20, 0xa3, 0x4a, 0x9f, 0xf9, 0x58,
  0x77, 0x38, 0x02, 0x1b, 0x32, 0x8c, 0xcb, 0xca,
  0x0a, 0xc6, 0x50, 0x88, 0xa8, 0x22, 0x23, 0xc1,
  0x02, 0xc2, 0x37, 0xd7, 0x05, 0xa4, 0x99, 0x75,
  0x8e, 0x33, 0x62, 0xc4, 0x65, 0x3b, 0x71, 0x42,
  0xe3, 0x6f, 0x07, 0xd5, 0xab, 0x6b, 0x14, 0x28,
  0x45, 0x09, 0x94, 0xf4, 0x06, 0xab, 0x79, 0x2c,
  0xf5, 0xc3, 0xdf, 0xc6, 0xcc, 0x48, 0x1f, 0xaf
};

const uint8_t APID_VAL[] = {
  0x45, 0x47, 0x52, 0x32
};

// -----------------------------------------------------------------------------
//                          Public Function Declarations
// -----------------------------------------------------------------------------

#endif // SLI_SIDEWALK_DEVICE_BACKUP_CERTIFICATE_COMMON_H
